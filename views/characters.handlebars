<div class="container-fluid">
    <h2>View Characters</h2>
    <div class="container-fluid">
        <a role="button" class="btn btn-primary" href="/chars/add">Add Character</a>
    </div>
    <div id="chars" class="table-responsive mt-2">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Life Stage</th>
                    <th scope="col">Region</th>
                    <th scope="col">Specialty</th>
                    <th scope="col">Tool</th>
                    <th scope="col">Equipment</th>
                    <th scope="col">Available</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                {{#each rows}}
                    <tr>
                        <td>{{this.firstName}}</td>
                        <td>{{this.lastName}}</td>
                        <td>{{this.lifeStage}}</td>
                        <td>{{this.region}}</td>
                        <td>{{this.specialty}}</td>
                        <td>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#toolCheck" id="{{this.charaId}}"><i data-feather="tag" aria-label="Check"></i></button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#equipCheck" id="{{this.charaId}}"><i data-feather="tag" aria-label="Check"></i></button>
                        </td>
                        <td>{{#if this.available}}Yes{{else}}No{{/if}}</td>
                        <td>{{> buttonCluster uid=this.charaId}}</td>
                    </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <div class="modal fade" id="toolCheck" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="toolCheck" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Tools</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="toolsModalTable"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="equipCheck" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="equipCheck" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Equipment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="equipModalTable"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var toolModal = document.getElementById('toolCheck');

    toolModal.addEventListener('show.bs.modal', function (event) {
        var req = new XMLHttpRequest();

        let uid = event.relatedTarget.id;

        req.open("GET", '/api?id=' + uid + '&base=0');
        req.send(null);

        req.addEventListener('load', function() {

            let response = JSON.parse(req.responseText);
            let head = ['Name', 'Type', 'Material', 'Level', 'Enchantment'];

            var table = document.createElement('table');
            table.setAttribute('class', 'table');

            var header = document.createElement('thead');
            
            head.forEach(label => {
                let h = document.createElement('th')
                h.setAttribute('scope', 'col');
                h.innerText = label;
                header.append(h);
            });

            table.append(header);

            response.rows.forEach(tool => {
                let row = document.createElement('tr');

                var data = document.createElement('td');
                data.innerText = tool.toolName;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = tool.type;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = tool.material;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = tool.level;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = tool.toolEnchant;
                row.appendChild(data);

                table.append(row);
            });

            document.getElementById('toolsModalTable').append(table);

        });
    });

    toolModal.addEventListener('hidden.bs.modal', function (event) {
        document.getElementById('toolsModalTable').firstChild.remove();
    });

    var equipModal = document.getElementById('equipCheck');

    equipModal.addEventListener('show.bs.modal', function (event) {
        var req = new XMLHttpRequest();

        let uid = event.relatedTarget.id;

        req.open("GET", '/api?id=' + uid + '&base=1');
        req.send(null);

        req.addEventListener('load', function() {
            let response = JSON.parse(req.responseText);
            let head = ['Name', 'Equipable Location', 'Weight', 'Material', 'Level', 'Enchantment'];

            var table = document.createElement('table');
            table.setAttribute('class', 'table');

            var header = document.createElement('thead');
            
            head.forEach(label => {
                let h = document.createElement('th')
                h.setAttribute('scope', 'col');
                h.innerText = label;
                header.append(h);
            });

            table.append(header);

            response.rows.forEach(equip => {
                let row = document.createElement('tr');

                var data = document.createElement('td');
                data.innerText = equip.equipName;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = equip.location;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = equip.weight;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = equip.material;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = equip.level;
                row.appendChild(data);
                var data = document.createElement('td');
                data.innerText = equip.equipEnchant;
                row.appendChild(data);

                table.append(row);
            });

            document.getElementById('equipModalTable').append(table);
        });
    });

    equipModal.addEventListener('hidden.bs.modal', function (event) {
        document.getElementById('equipModalTable').firstChild.remove();
    });
</script>